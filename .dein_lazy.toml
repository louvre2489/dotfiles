###################################################
# ハイライト/補完
###################################################
[[plugins]]
repo = 'Shougo/deoplete.nvim'
depends = ['context_filetype.vim']
on_event = 'InsertEnter'
hook_post_source = '''
  if !has('nvim')
    call dein#add('roxma/nvim-yarp')
    call dein#add('roxma/vim-hug-neovim-rpc')
  endif

  " 起動時に有効にする
  let g:deoplete#enable_at_startup = 1

  " 補完を開始する文字数
  let g:deoplete#auto_complete_start_length = 1

  " 大文字小文字を無視する
  let g:deoplete#enable_ignore_case = 1

  " バッファからも補完候補を読む
  let g:deoplete#file#enable_buffer_path = 1

  inoremap <expr><tab> pumvisible() ? "\<C-n>" :
  \  neosnippet#expandable_or_jumpable() ?
  \   "\<Plug>(neosnippet_expand_or_jump)" : "\<tab>"
'''

[[plugins]]
repo = 'Shougo/neosnippet.vim'
depends = ['context_filetype.vim', 'neosnippet-snippets']
on_event = 'InsertEnter'
hook_post_source = '''
  " キーマップ
  imap <C-k> <Plug>(neosnippet_expand_or_jump)
  smap <C-k> <Plug>(neosnippet_expand_or_jump)
  xmap <C-k> <Plug>(neosnippet_expand_target)

  if has('conceal')
    set conceallevel=2 concealcursor=niv
  endif
'''

[[plugins]]
repo = 'Shougo/neosnippet-snippets'
depends = ['context_filetype.vim']
on_event = 'InsertEnter'

# toml
[[plugins]]
repo = 'cespare/vim-toml'
on_ft = 'toml'

# Scala
[[plugins]]
repo = 'derekwyatt/vim-scala'
on_ft = 'scala'
hook_add = '''
  au BufRead,BufNewFile *.sbt,*.sc set filetype=scala
'''

# Rust
[[plugins]]
repo = 'rust-lang/rust.vim'
hook_add = '''
  let g:rustfmt_autosave = 1
'''
on_ft = 'rust'

